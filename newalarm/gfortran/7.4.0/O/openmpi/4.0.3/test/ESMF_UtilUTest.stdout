2022-07-14 01:46:38
  Beginning Test, file ESMF_UtilUTest.F90, line 124
  NUMBER_OF_PROCESSORS           4
  Beginning Test, file ESMF_UtilUTest.F90, line 124
  NUMBER_OF_PROCESSORS           4
  Beginning Test, file ESMF_UtilUTest.F90, line 124
  NUMBER_OF_PROCESSORS           4

  ESMF_VERSION_MAJOR =           8
  Beginning Test, file ESMF_UtilUTest.F90, line 124
  NUMBER_OF_PROCESSORS           4

  ESMF_VERSION_MAJOR =           8
  ESMF_VERSION_MINOR =           3
  ESMF_VERSION_REVISION      =           0
  ESMF_VERSION_PATCHLEVEL    =           0
  ESMF_VERSION_STRING=8.3.0 beta snapshot

  ESMF_VERSION_MAJOR =           8
  ESMF_VERSION_MINOR =           3
  ESMF_VERSION_REVISION      =           0
  ESMF_VERSION_PATCHLEVEL    =           0
  ESMF_VERSION_STRING=8.3.0 beta snapshot
  ESMF_VERSION_MINOR =           3
  ESMF_VERSION_REVISION      =           0
  ESMF_VERSION_PATCHLEVEL    =           0
  ESMF_VERSION_STRING=8.3.0 beta snapshot
  PASS  Comparing numeric and character major version, ESMF_UtilUTest.F90, line 153

  ESMF_VERSION_MAJOR =           8
  ESMF_VERSION_MINOR =           3
  ESMF_VERSION_REVISION      =           0
  ESMF_VERSION_PATCHLEVEL    =           0
  ESMF_VERSION_STRING=8.3.0 beta snapshot
  PASS  Comparing numeric and character minor version, ESMF_UtilUTest.F90, line 164
  PASS  Comparing numeric and character revision, ESMF_UtilUTest.F90, line 179
  PASS  No arg VersionPrint test, ESMF_UtilUTest.F90, line 191
  PASS  Comparing numeric and character major version, ESMF_UtilUTest.F90, line 153
  PASS  Comparing numeric and character minor version, ESMF_UtilUTest.F90, line 164
  PASS  Comparing numeric and character revision, ESMF_UtilUTest.F90, line 179
  PASS  No arg VersionPrint test, ESMF_UtilUTest.F90, line 191
   ESMF_VERSION_STRING:       8.3.0 beta snapshot
  PASS  Comparing numeric and character major version, ESMF_UtilUTest.F90, line 153
  PASS  Comparing numeric and character minor version, ESMF_UtilUTest.F90, line 164
  PASS  Comparing numeric and character revision, ESMF_UtilUTest.F90, line 179
  PASS  No arg VersionPrint test, ESMF_UtilUTest.F90, line 191
   ESMF_VERSION_STRING:       8.3.0 beta snapshot
  PASS  Comparing numeric and character major version, ESMF_UtilUTest.F90, line 153
  PASS  Comparing numeric and character minor version, ESMF_UtilUTest.F90, line 164
  PASS  Comparing numeric and character revision, ESMF_UtilUTest.F90, line 179
  PASS  No arg VersionPrint test, ESMF_UtilUTest.F90, line 191
   ESMF_VERSION_STRING:       8.3.0 beta snapshot
  PASS  One line VersionPrint test, ESMF_UtilUTest.F90, line 199
  PASS  One line VersionPrint test, ESMF_UtilUTest.F90, line 199
   ESMF_VERSION_STRING:       8.3.0 beta snapshot
   ESMF_VERSION_STRING_GIT:   v8.3.0b13-21-g29f31e7579
   ESMF_VERSION_MAJOR:                   8
   ESMF_VERSION_STRING:       8.3.0 beta snapshot
  PASS  One line VersionPrint test, ESMF_UtilUTest.F90, line 199
   ESMF_VERSION_STRING:       8.3.0 beta snapshot
   ESMF_VERSION_STRING_GIT:   v8.3.0b13-21-g29f31e7579
   ESMF_VERSION_MAJOR:                   8
   ESMF_VERSION_MINOR:                   3
  PASS  One line VersionPrint test, ESMF_UtilUTest.F90, line 199
   ESMF_VERSION_STRING:       8.3.0 beta snapshot
   ESMF_VERSION_STRING_GIT:   v8.3.0b13-21-g29f31e7579
   ESMF_VERSION_MAJOR:                   8
   ESMF_VERSION_MINOR:                   3
   ESMF_VERSION_REVISION:                0
   ESMF_VERSION_STRING:       8.3.0 beta snapshot
   ESMF_VERSION_STRING_GIT:   v8.3.0b13-21-g29f31e7579
   ESMF_VERSION_MAJOR:                   8
   ESMF_VERSION_MINOR:                   3
   ESMF_VERSION_REVISION:                0
   ESMF_VERSION_PATCHLEVEL:              0
   ESMF_VERSION_PATCHLEVEL:              0
   ESMF_VERSION_PUBLIC:        F
   ESMF_VERSION_BETASNAPSHOT:  T
 
 Earth System Modeling Framework
 
   ESMF_VERSION_MINOR:                   3
   ESMF_VERSION_REVISION:                0
   ESMF_VERSION_PATCHLEVEL:              0
   ESMF_VERSION_PUBLIC:        F
   ESMF_VERSION_BETASNAPSHOT:  T
 
 Earth System Modeling Framework
 
 Copyright (c) 2002-2021 University Corporation for Atmospheric Research,
   ESMF_VERSION_REVISION:                0
   ESMF_VERSION_PATCHLEVEL:              0
   ESMF_VERSION_PUBLIC:        F
   ESMF_VERSION_BETASNAPSHOT:  T
 
 Earth System Modeling Framework
 
 Copyright (c) 2002-2021 University Corporation for Atmospheric Research,
   ESMF_VERSION_PUBLIC:        F
   ESMF_VERSION_BETASNAPSHOT:  T
 
 Earth System Modeling Framework
 
 Copyright (c) 2002-2021 University Corporation for Atmospheric Research,
 Massachusetts Institute of Technology, Geophysical Fluid Dynamics Laboratory,
 University of Michigan, National Centers for Environmental Prediction,
 Los Alamos National Laboratory, Argonne National Laboratory,
 NASA Goddard Space Flight Center.
 Massachusetts Institute of Technology, Geophysical Fluid Dynamics Laboratory,
 University of Michigan, National Centers for Environmental Prediction,
 Los Alamos National Laboratory, Argonne National Laboratory,
 NASA Goddard Space Flight Center.
 All rights reserved.
 
 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the 'Software'), to
 deal with the Software without restriction, including without limitation the
 rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 sell copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:
    1. Redistributions of source code must retain the above copyright notice,
       this list of conditions and the following disclaimers.
    2. Redistributions in binary form must reproduce the above copyright
       notice, this list of conditions and the following disclaimers in the
       documentation and/or other materials provided with the distribution.
    3. Neither the names of the organizations developing this software, nor
       the names of its contributors may be used to endorse or promote products
       derived from this Software without specific prior written permission.
 
 THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 WITH THE SOFTWARE.
  PASS  Multi-line VersionPrint test, ESMF_UtilUTest.F90, line 207
   ESMF_VERSION_STRING:       8.3.0 beta snapshot

   ESMF_VERSION_STRING:       8.3.0 beta snapshot
   ESMF_VERSION_STRING_GIT:   v8.3.0b13-21-g29f31e7579
   ESMF_VERSION_MAJOR:                   8
   ESMF_VERSION_MINOR:                   3
   ESMF_VERSION_REVISION:                0
   ESMF_VERSION_PATCHLEVEL:              0
   ESMF_VERSION_PUBLIC:        F
   ESMF_VERSION_BETASNAPSHOT:  T
 
 Earth System Modeling Framework
 
 Copyright (c) 2002-2021 University Corporation for Atmospheric Research,
 Massachusetts Institute of Technology, Geophysical Fluid Dynamics Laboratory,
 University of Michigan, National Centers for Environmental Prediction,
 Los Alamos National Laboratory, Argonne National Laboratory,
 NASA Goddard Space Flight Center.
 All rights reserved.
 
 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the 'Software'), to
 deal with the Software without restriction, including without limitation the
 rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 sell copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:
    1. Redistributions of source code must retain the above copyright notice,
       this list of conditions and the following disclaimers.
    2. Redistributions in binary form must reproduce the above copyright
       notice, this list of conditions and the following disclaimers in the
       documentation and/or other materials provided with the distribution.
    3. Neither the names of the organizations developing this software, nor
       the names of its contributors may be used to endorse or promote products
       derived from this Software without specific prior written permission.
 
 THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 FROM, OUT OF OR IN CONNECTION WITH THE SOFTW Copyright (c) 2002-2021 University Corporation for Atmospheric Research,
 Massachusetts Institute of Technology, Geophysical Fluid Dynamics Laboratory,
 University of Michigan, National Centers for Environmental Prediction,
 Los Alamos National Laboratory, Argonne National Laboratory,
 NASA Goddard Space Flight Center.
 All rights reserved.
 
 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the 'Software'), to
 deal with the Software without restriction, including without limitation the
 rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 sell copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:
    1. Redistributions of source code must retain the above copyright notice,
       this list of conditions and the following disclaimers.
    2. Redistributions in binary form must reproduce the above copyright
       notice, this list of conditions and the following disclaimers in the
       documentation and/or other materials provided with the distribution.
    3. Neither the names of the organizations developing this software, nor
       the names of its contributors may be used to endorse or promote products
       derived from this Software without specific prior written permission.
 
 THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 WITH THE SOFTWARE.
  PASS  Multi-line VersionPrint test, ESMF_UtilUTest.F90, line 207
   ESMF_VERSION_STRING:       8.3.0 beta snapshot

   ESMF_VERSION_STRING:       8.3.0 beta snapshot
   ESMF_VERSION_STRING_GIT:   v8.3.0b13-21-g29f31e7579
   ESMF_VERSION_MAJOR:                   8
   ESMF_VERSION_MINOR:                   3
   ESMF_VERSION_REVISION:                0
   ESMF_VERSION_PATCHLEVEL:              0
   ESMF_VERSION_PUBLIC:        F
   ESMF_VERSION_BETASNAPSHOT:  T
 
 Earth System Modeling Framework
 
 Copyright (c) 2002-2021 University Corporation for Atmospheric Research,
 Massachusetts Institute of Technology, Geophysical Fluid Dynamics Laboratory,
 University of Michigan, National Centers for Environmental Prediction,
 Los Alamos National Laboratory, Argonne National Laboratory,
 NASA Goddard Space Flight Center.
 All rights reserved.
 
 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the 'Software'), to
 deal with the Software without restriction, including without limitation the
 rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 sell copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:
    1. Redistributions of source code must retain the above copyright notice,
       this list of conditions and the following disclaimers.
    2. Redistributions in binary form must reproduce the above copyright
       notice, this list of conditions and the following disclaimers in the
       documentation and/or other materials provided with the distribution.
    3. Neither the names of the organizations developing this software, nor
       the names of its contributors may be used to endorse or promote products
       derived from this Software without specific prior written permission.
 
 THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT Massachusetts Institute of Technology, Geophysical Fluid Dynamics Laboratory,
 University of Michigan, National Centers for Environmental Prediction,
 Los Alamos National Laboratory, Argonne National Laboratory,
 NASA Goddard Space Flight Center.
 All rights reserved.
 
 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the 'Software'), to
 deal with the Software without restriction, including without limitation the
 rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 sell copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:
    1. Redistributions of source code must retain the above copyright notice,
       this list of conditions and the following disclaimers.
    2. Redistributions in binary form must reproduce the above copyright
       notice, this list of conditions and the following disclaimers in the
       documentation and/or other materials provided with the distribution.
    3. Neither the names of the organizations developing this software, nor
       the names of its contributors may be used to endorse or promote products
       derived from this Software without specific prior written permission.
 
 THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 WITH THE SOFTWARE.
  PASS  Multi-line VersionPrint test, ESMF_UtilUTest.F90, line 207
   ESMF_VERSION_STRING:       8.3.0 beta snapshot

   ESMF_VERSION_STRING:       8.3.0 beta snapshot
   ESMF_VERSION_STRING_GIT:   v8.3.0b13-21-g29f31e7579
   ESMF_VERSION_MAJOR:                   8
   ESMF_VERSION_MINOR:                   3
   ESMF_VERSION_REVISION:                0
   ESMF_VERSION_PATCHLEVEL:              0
   ESMF_VERSION_PUBLIC:        F
   ESMF_VERSION_BETASNAPSHOT:  T
 
 Earth System Modeling Framework
 
 Copyright (c) 2002-2021 University Corporation for Atmospheric Research,
 Massachusetts Institute of Technology, Geophysical Fluid Dynamics Laboratory,
 University of Michigan, National Centers for Environmental Prediction,
 Los Alamos National Laboratory, Argonne National Laboratory,
 NASA Goddard Space Flight Center.
 All rights reserved.
 
 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the 'Software'), to
 deal with the Software without restriction, including without limitation the
 rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 sell copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:
    1. Redistributions of source code must retain the above copyright notice,
       this list of conditions and the following disclaimers.
    2. Redistributions in binary form must reproduce the above copyright
       notice, this list of conditions and the following disclaimers in the
       documentation and/or other materials provided with the distribution.
    3. Neither the names of the organizations developing this software, nor
       the names of its contributors may be used to endorse or promote products
       derived from this Software without specific prior written permission.
 
 THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 FROM, OUT OF OR IN CONNECTION WITH THE SOFTW All rights reserved.
 
 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the 'Software'), to
 deal with the Software without restriction, including without limitation the
 rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 sell copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:
    1. Redistributions of source code must retain the above copyright notice,
       this list of conditions and the following disclaimers.
    2. Redistributions in binary form must reproduce the above copyright
       notice, this list of conditions and the following disclaimers in the
       documentation and/or other materials provided with the distribution.
    3. Neither the names of the organizations developing this software, nor
       the names of its contributors may be used to endorse or promote products
       derived from this Software without specific prior written permission.
 
 THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 WITH THE SOFTWARE.
  PASS  Multi-line VersionPrint test, ESMF_UtilUTest.F90, line 207
   ESMF_VERSION_STRING:       8.3.0 beta snapshot

   ESMF_VERSION_STRING:       8.3.0 beta snapshot
   ESMF_VERSION_STRING_GIT:   v8.3.0b13-21-g29f31e7579
   ESMF_VERSION_MAJOR:                   8
   ESMF_VERSION_MINOR:                   3
   ESMF_VERSION_REVISION:                0
   ESMF_VERSION_PATCHLEVEL:              0
   ESMF_VERSION_PUBLIC:        F
   ESMF_VERSION_BETASNAPSHOT:  T
 
 Earth System Modeling Framework
 
 Copyright (c) 2002-2021 University Corporation for Atmospheric Research,
 Massachusetts Institute of Technology, Geophysical Fluid Dynamics Laboratory,
 University of Michigan, National Centers for Environmental Prediction,
 Los Alamos National Laboratory, Argonne National Laboratory,
 NASA Goddard Space Flight Center.
 All rights reserved.
 
 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the 'Software'), to
 deal with the Software without restriction, including without limitation the
 rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 sell copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:
    1. Redistributions of source code must retain the above copyright notice,
       this list of conditions and the following disclaimers.
    2. Redistributions in binary form must reproduce the above copyright
       notice, this list of conditions and the following disclaimers in the
       documentation and/or other materials provided with the distribution.
    3. Neither the names of the organizations developing this software, nor
       the names of its contributors may be used to endorse or promote products
       derived from this Software without specific prior written permission.
 
 THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 WITH THE SOFTWARE.
  PASS  Single and multi-line VersionPrint test, ESMF_UtilUTest.F90, line 215
ARE OR THE USE OR OTHER DEALINGS
 WITH THE SOFTWARE.
  PASS  Single and multi-line VersionPrint test, ESMF_UtilUTest.F90, line 215
ARE OR THE USE OR OTHER DEALINGS
 WITH THE SOFTWARE.
  PASS  Single and multi-line VersionPrint test, ESMF_UtilUTest.F90, line 215
, TORT OR OTHERWISE, ARISING
 FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 WITH THE SOFTWARE.
  PASS  Single and multi-line VersionPrint test, ESMF_UtilUTest.F90, line 215
  PASS  Testing ESMF_UtilIOUnitGet, obtaining and opening units, ESMF_UtilUTest.F90, line 240
  PASS  Testing ESMF_UtilIOUnitGet, obtaining and opening units, ESMF_UtilUTest.F90, line 240
  PASS  Testing ESMF_UtilIOUnitGet, obtaining and opening units, ESMF_UtilUTest.F90, line 240
  PASS  Testing ESMF_UtilIOUnitGet, obtaining and opening units, ESMF_UtilUTest.F90, line 240
  PASS  Testing ESMF_UtilIOUnitFlush, get a free unit, ESMF_UtilUTest.F90, line 257
  PASS  Testing ESMF_UtilIOUnitFlush, get a free unit, ESMF_UtilUTest.F90, line 257
  PASS  Testing ESMF_UtilIOUnitFlush, get a free unit, ESMF_UtilUTest.F90, line 257
  PASS  ESMF_UtilIOUnitFlush, open scratch file: IOtempfile_03, ESMF_UtilUTest.F90, line 266
  PASS  ESMF_UtilIOUnitFlush, flush the scratch file, ESMF_UtilUTest.F90, line 275
  PASS  Testing ESMF_UtilIOUnitFlush, get a free unit, ESMF_UtilUTest.F90, line 257
  PASS  Testing ESMF_UtilGetArgC, command line argument count, ESMF_UtilUTest.F90, line 290
  PASS  ESMF_UtilIOUnitFlush, open scratch file: IOtempfile_00, ESMF_UtilUTest.F90, line 266
  PASS  Testing ESMF_UtilGetArgC, command line argument count value, ESMF_UtilUTest.F90, line 297
  PASS  Testing ESMF_UtilGetArgC, argindex < 0, ESMF_UtilUTest.F90, line 305
  PASS  ESMF_UtilIOUnitFlush, open scratch file: IOtempfile_01, ESMF_UtilUTest.F90, line 266
  PASS  ESMF_UtilIOUnitFlush, flush the scratch file, ESMF_UtilUTest.F90, line 275
 command name = ./ESMF_UtilUTest
  PASS  Testing ESMF_UtilGetArgC, get command name, ESMF_UtilUTest.F90, line 314
  PASS  Testing ESMF_UtilGetArgC, get truncated command name, ESMF_UtilUTest.F90, line 322
 arg_len =          16 , len_trim (arg) =          16
  PASS  Testing ESMF_UtilGetArgC, compare arg lengths, ESMF_UtilUTest.F90, line 332
  PASS  ESMF_UtilIOUnitFlush, flush the scratch file, ESMF_UtilUTest.F90, line 275
  PASS  ESMF_UtilIOUnitFlush, open scratch file: IOtempfile_02, ESMF_UtilUTest.F90, line 266
  PASS  ESMF_UtilIOUnitFlush, flush the scratch file, ESMF_UtilUTest.F90, line 275
  PASS  Testing ESMF_UtilGetArgC, command line argument count, ESMF_UtilUTest.F90, line 290
  PASS  Testing ESMF_UtilGetArgC, command line argument count value, ESMF_UtilUTest.F90, line 297
  PASS  Testing ESMF_UtilGetArgC, command line argument count, ESMF_UtilUTest.F90, line 290
  PASS  Testing ESMF_UtilGetArgC, argindex < 0, ESMF_UtilUTest.F90, line 305
  PASS  Testing ESMF_UtilGetArgC, command line argument count value, ESMF_UtilUTest.F90, line 297
 command name = ./ESMF_UtilUTest
  PASS  Testing ESMF_UtilGetArgC, get command name, ESMF_UtilUTest.F90, line 314
  PASS  Testing ESMF_UtilGetArgC, argindex < 0, ESMF_UtilUTest.F90, line 305
  PASS  Testing ESMF_UtilGetArgC, get truncated command name, ESMF_UtilUTest.F90, line 322
 command name = ./ESMF_UtilUTest
  PASS  Testing ESMF_UtilGetArgC, get command name, ESMF_UtilUTest.F90, line 314
  PASS  Testing ESMF_UtilGetArgC, command line argument count, ESMF_UtilUTest.F90, line 290
 arg_len =          16 , len_trim (arg) =          16
  PASS  Testing ESMF_UtilGetArgC, compare arg lengths, ESMF_UtilUTest.F90, line 332
  PASS  Testing ESMF_UtilGetArgC, command line argument count value, ESMF_UtilUTest.F90, line 297
  PASS  Testing ESMF_UtilGetArgC, get truncated command name, ESMF_UtilUTest.F90, line 322
 arg_len =          16 , len_trim (arg) =          16
  PASS  Testing ESMF_UtilGetArgC, compare arg lengths, ESMF_UtilUTest.F90, line 332
  PASS  Testing ESMF_UtilGetArgC, argindex < 0, ESMF_UtilUTest.F90, line 305
 command name = ./ESMF_UtilUTest
  PASS  Testing ESMF_UtilGetArgC, get command name, ESMF_UtilUTest.F90, line 314
  PASS  Testing ESMF_UtilGetArgC, get truncated command name, ESMF_UtilUTest.F90, line 322
 arg_len =          16 , len_trim (arg) =          16
  PASS  Testing ESMF_UtilGetArgC, compare arg lengths, ESMF_UtilUTest.F90, line 332
  PASS  Testing ESMF_UtilGetArgC, argindex > nargs, ESMF_UtilUTest.F90, line 342
  PASS  Testing ESMF_UtilGetArgIndex for program path, ESMF_UtilUTest.F90, line 351
  PASS  Testing ESMF_UtilGetArgIndex for program path, ESMF_UtilUTest.F90, line 360
  PASS  Testing ascending real sort, ESMF_UtilUTest.F90, line 375
  PASS  Testing sorted ascending real results, ESMF_UtilUTest.F90, line 389
  PASS  Testing descending real sort, ESMF_UtilUTest.F90, line 398
  PASS  Testing sorted descending real results, ESMF_UtilUTest.F90, line 412
  PASS  Testing ascending double precision real sort, ESMF_UtilUTest.F90, line 423
  PASS  Testing sorted ascending double precision real results, ESMF_UtilUTest.F90, line 437
  PASS  Testing descending double precision real sort, ESMF_UtilUTest.F90, line 446
  PASS  Testing sorted descending double precision real results, ESMF_UtilUTest.F90, line 460
  PASS  Testing ascending integer sort, ESMF_UtilUTest.F90, line 471
  PASS  Testing sorted ascending integer results, ESMF_UtilUTest.F90, line 486
  PASS  Testing descending integer sort, ESMF_UtilUTest.F90, line 495
  PASS  Testing sorted descending integer results, ESMF_UtilUTest.F90, line 510
  PASS  Testing ascending double integer sort, ESMF_UtilUTest.F90, line 521
  PASS  Testing sorted ascending double integer results, ESMF_UtilUTest.F90, line 536
  PASS  Testing descending double integer sort, ESMF_UtilUTest.F90, line 545
  PASS  Testing sorted descending double integer results, ESMF_UtilUTest.F90, line 560
  PASS  Testing ascending character string sort, ESMF_UtilUTest.F90, line 571
  PASS  Testing sorted ascending character string results, ESMF_UtilUTest.F90, line 583
  PASS  Testing descending character string sort, ESMF_UtilUTest.F90, line 592
  PASS  Testing ESMF_UtilGetArgC, argindex > nargs, ESMF_UtilUTest.F90, line 342
  PASS  Testing sorted descending character string results, ESMF_UtilUTest.F90, line 604
  PASS  Testing ESMF_UtilGetArgIndex for program path, ESMF_UtilUTest.F90, line 351
  PASS  Testing ESMF_UtilGetArgIndex for program path, ESMF_UtilUTest.F90, line 360
  PASS  Testing ascending real sort, ESMF_UtilUTest.F90, line 375
  PASS  Testing sorted ascending real results, ESMF_UtilUTest.F90, line 389
  PASS  Testing descending real sort, ESMF_UtilUTest.F90, line 398
  PASS  Testing sorted descending real results, ESMF_UtilUTest.F90, line 412
  PASS  Testing ascending double precision real sort, ESMF_UtilUTest.F90, line 423
  PASS  Testing creating a directory, ESMF_UtilUTest.F90, line 618
  PASS  Testing sorted ascending double precision real results, ESMF_UtilUTest.F90, line 437
  PASS  Testing descending double precision real sort, ESMF_UtilUTest.F90, line 446
  PASS  Testing sorted descending double precision real results, ESMF_UtilUTest.F90, line 460
  PASS  Testing creating a directory which already exists, ESMF_UtilUTest.F90, line 626
  PASS  Testing ascending integer sort, ESMF_UtilUTest.F90, line 471
  PASS  Testing sorted ascending integer results, ESMF_UtilUTest.F90, line 486
  PASS  Testing creating a directory which already exists w/relaxedFlag, ESMF_UtilUTest.F90, line 634
  PASS  Testing descending integer sort, ESMF_UtilUTest.F90, line 495
  PASS  Testing sorted descending integer results, ESMF_UtilUTest.F90, line 510
  PASS  Testing ascending double integer sort, ESMF_UtilUTest.F90, line 521
  PASS  Testing sorted ascending double integer results, ESMF_UtilUTest.F90, line 536
  PASS  Testing descending double integer sort, ESMF_UtilUTest.F90, line 545
  PASS  Testing sorted descending double integer results, ESMF_UtilUTest.F90, line 560
  PASS  Testing removing a directory, ESMF_UtilUTest.F90, line 642
  PASS  Testing ascending character string sort, ESMF_UtilUTest.F90, line 571
  PASS  Testing sorted ascending character string results, ESMF_UtilUTest.F90, line 583
  PASS  Testing removing a directory which does not exist, ESMF_UtilUTest.F90, line 650
  PASS  Testing descending character string sort, ESMF_UtilUTest.F90, line 592
  PASS  Testing sorted descending character string results, ESMF_UtilUTest.F90, line 604
  PASS  Testing removing a directory which does not exist, relaxed, ESMF_UtilUTest.F90, line 658
  PASS  Testing getting the current directory, ESMF_UtilUTest.F90, line 672
 current directory name =>/glade/scratch/dunlap/esmf-test-dev/gfortran_7.4.0_openmpi_O_newalarm/esmf/test/testO/Linux.gfortran.64.openmpi.default<
  PASS  Testing directory name for valid characters, ESMF_UtilUTest.F90, line 691
  PASS  Testing getting the current directory with small string, ESMF_UtilUTest.F90, line 699
  PASS  Testing converting string to UPPER case, ESMF_UtilUTest.F90, line 711
  PASS  Testing converting string to lower case, ESMF_UtilUTest.F90, line 721
  PASS  Testing creating a directory, ESMF_UtilUTest.F90, line 618
  PASS  Testing ESMF_UtilGetArgC, argindex > nargs, ESMF_UtilUTest.F90, line 342
  PASS  ESMF_UtilString2Int() - no blanks - Test, ESMF_UtilUTest.F90, line 733
  PASS  Testing creating a directory which already exists, ESMF_UtilUTest.F90, line 626
  PASS  Testing ESMF_UtilGetArgIndex for program path, ESMF_UtilUTest.F90, line 351
  PASS  ESMF_UtilString2Int() - no blanks - Test, ESMF_UtilUTest.F90, line 740
  PASS  Testing ESMF_UtilGetArgIndex for program path, ESMF_UtilUTest.F90, line 360
  PASS  Testing creating a directory which already exists w/relaxedFlag, ESMF_UtilUTest.F90, line 634
  PASS  ESMF_UtilStringInt2String() - Test, ESMF_UtilUTest.F90, line 749
  PASS  Testing ascending real sort, ESMF_UtilUTest.F90, line 375
  PASS  String -> Integer -> String conversion correctness - Test, ESMF_UtilUTest.F90, line 756
  PASS  Testing sorted ascending real results, ESMF_UtilUTest.F90, line 389
  PASS  ESMF_UtilString2Int() - negative value - Test, ESMF_UtilUTest.F90, line 764
  PASS  Testing descending real sort, ESMF_UtilUTest.F90, line 398
  PASS  ESMF_UtilString2Int() - negative value - Test, ESMF_UtilUTest.F90, line 771
  PASS  Testing sorted descending real results, ESMF_UtilUTest.F90, line 412
  PASS  ESMF_UtilString2Int() - explicit positive value - Test, ESMF_UtilUTest.F90, line 779
  PASS  Testing ESMF_UtilGetArgC, argindex > nargs, ESMF_UtilUTest.F90, line 342
  PASS  Testing ascending double precision real sort, ESMF_UtilUTest.F90, line 423
  PASS  ESMF_UtilString2Int() - explicit positive value - Test, ESMF_UtilUTest.F90, line 786
  PASS  Testing removing a directory, ESMF_UtilUTest.F90, line 642
  PASS  Testing sorted ascending double precision real results, ESMF_UtilUTest.F90, line 437
  PASS  ESMF_UtilString2Int() - leading blanks - Test, ESMF_UtilUTest.F90, line 794
  PASS  Testing ESMF_UtilGetArgIndex for program path, ESMF_UtilUTest.F90, line 351
  PASS  Testing descending double precision real sort, ESMF_UtilUTest.F90, line 446
  PASS  ESMF_UtilString2Int() - leading blanks - Test, ESMF_UtilUTest.F90, line 801
  PASS  Testing ESMF_UtilGetArgIndex for program path, ESMF_UtilUTest.F90, line 360
  PASS  Testing removing a directory which does not exist, ESMF_UtilUTest.F90, line 650
  PASS  ESMF_UtilString2Int() - trailing blanks - Test, ESMF_UtilUTest.F90, line 809
  PASS  Testing sorted descending double precision real results, ESMF_UtilUTest.F90, line 460
  PASS  Testing ascending integer sort, ESMF_UtilUTest.F90, line 471
  PASS  Testing ascending real sort, ESMF_UtilUTest.F90, line 375
  PASS  Testing removing a directory which does not exist, relaxed, ESMF_UtilUTest.F90, line 658
  PASS  ESMF_UtilString2Int() - trailing blanks - Test, ESMF_UtilUTest.F90, line 816
  PASS  Testing sorted ascending real results, ESMF_UtilUTest.F90, line 389
  PASS  Testing sorted ascending integer results, ESMF_UtilUTest.F90, line 486
  PASS  Testing descending integer sort, ESMF_UtilUTest.F90, line 495
  PASS  Testing sorted descending integer results, ESMF_UtilUTest.F90, line 510
  PASS  ESMF_UtilString2Int() - special string missing - Test, ESMF_UtilUTest.F90, line 826
  PASS  Testing getting the current directory, ESMF_UtilUTest.F90, line 672
 current directory name =>/glade/scratch/dunlap/esmf-test-dev/gfortran_7.4.0_openmpi_O_newalarm/esmf/test/testO/Linux.gfortran.64.openmpi.default<
  PASS  Testing directory name for valid characters, ESMF_UtilUTest.F90, line 691
  PASS  Testing descending real sort, ESMF_UtilUTest.F90, line 398
  PASS  Testing sorted descending real results, ESMF_UtilUTest.F90, line 412
  PASS  ESMF_UtilString2Int() - special string - Test, ESMF_UtilUTest.F90, line 836
  PASS  Testing ascending double precision real sort, ESMF_UtilUTest.F90, line 423
  PASS  Testing getting the current directory with small string, ESMF_UtilUTest.F90, line 699
  PASS  Testing ascending double integer sort, ESMF_UtilUTest.F90, line 521
  PASS  Testing sorted ascending double integer results, ESMF_UtilUTest.F90, line 536
  PASS  Testing descending double integer sort, ESMF_UtilUTest.F90, line 545
  PASS  ESMF_UtilString2Int() - special string - Test, ESMF_UtilUTest.F90, line 843
  PASS  Testing sorted ascending double precision real results, ESMF_UtilUTest.F90, line 437
  PASS  Testing descending double precision real sort, ESMF_UtilUTest.F90, line 446
  PASS  Testing sorted descending double precision real results, ESMF_UtilUTest.F90, line 460
  PASS  Testing converting string to UPPER case, ESMF_UtilUTest.F90, line 711
  PASS  Testing sorted descending double integer results, ESMF_UtilUTest.F90, line 560
  PASS  ESMF_UtilString2Real() - no blanks - Test, ESMF_UtilUTest.F90, line 856
  PASS  Testing ascending integer sort, ESMF_UtilUTest.F90, line 471
  PASS  Testing sorted ascending integer results, ESMF_UtilUTest.F90, line 486
  PASS  Testing converting string to lower case, ESMF_UtilUTest.F90, line 721
  PASS  Testing ascending character string sort, ESMF_UtilUTest.F90, line 571
  PASS  Testing sorted ascending character string results, ESMF_UtilUTest.F90, line 583
  PASS  ESMF_UtilString2Int() - no blanks - Test, ESMF_UtilUTest.F90, line 733
  PASS  ESMF_UtilString2Int() - no blanks - Test, ESMF_UtilUTest.F90, line 740
  PASS  ESMF_UtilString2Real() - no blanks - Test, ESMF_UtilUTest.F90, line 863
  PASS  Testing descending integer sort, ESMF_UtilUTest.F90, line 495
  PASS  Testing descending character string sort, ESMF_UtilUTest.F90, line 592
  PASS  Testing sorted descending integer results, ESMF_UtilUTest.F90, line 510
  PASS  Testing ascending double integer sort, ESMF_UtilUTest.F90, line 521
  PASS  ESMF_UtilStringInt2String() - Test, ESMF_UtilUTest.F90, line 749
  PASS  String -> Integer -> String conversion correctness - Test, ESMF_UtilUTest.F90, line 756
  PASS  ESMF_UtilString2Real() - negative value - Test, ESMF_UtilUTest.F90, line 871
  PASS  ESMF_UtilString2Real() - negative value - Test, ESMF_UtilUTest.F90, line 878
  PASS  ESMF_UtilString2Real() - explicit positive value - Test, ESMF_UtilUTest.F90, line 886
  PASS  Testing sorted descending character string results, ESMF_UtilUTest.F90, line 604
  PASS  ESMF_UtilString2Real() - explicit positive value - Test, ESMF_UtilUTest.F90, line 893
  PASS  Testing sorted ascending double integer results, ESMF_UtilUTest.F90, line 536
  PASS  Testing descending double integer sort, ESMF_UtilUTest.F90, line 545
  PASS  ESMF_UtilString2Int() - negative value - Test, ESMF_UtilUTest.F90, line 764
  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line 901
  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line 908
  PASS  Testing sorted descending double integer results, ESMF_UtilUTest.F90, line 560
  PASS  Testing ascending character string sort, ESMF_UtilUTest.F90, line 571
  PASS  ESMF_UtilString2Int() - negative value - Test, ESMF_UtilUTest.F90, line 771
  PASS  ESMF_UtilString2Int() - explicit positive value - Test, ESMF_UtilUTest.F90, line 779
  PASS  ESMF_UtilString2Int() - explicit positive value - Test, ESMF_UtilUTest.F90, line 786
  PASS  Testing sorted ascending character string results, ESMF_UtilUTest.F90, line 583
  PASS  ESMF_UtilString2Real() - trailing blanks - Test, ESMF_UtilUTest.F90, line 916
  PASS  Testing creating a directory, ESMF_UtilUTest.F90, line 618
  PASS  ESMF_UtilString2Int() - leading blanks - Test, ESMF_UtilUTest.F90, line 794
  PASS  ESMF_UtilString2Int() - leading blanks - Test, ESMF_UtilUTest.F90, line 801
  PASS  Testing descending character string sort, ESMF_UtilUTest.F90, line 592
  PASS  Testing sorted descending character string results, ESMF_UtilUTest.F90, line 604
  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line 923
  PASS  ESMF_UtilString2Double() - no blanks - Test, ESMF_UtilUTest.F90, line 936
  PASS  ESMF_UtilString2Int() - trailing blanks - Test, ESMF_UtilUTest.F90, line 809
  PASS  ESMF_UtilString2Int() - trailing blanks - Test, ESMF_UtilUTest.F90, line 816
  PASS  ESMF_UtilString2Double() - no blanks - Test, ESMF_UtilUTest.F90, line 943
  PASS  ESMF_UtilString2Double() - negative value - Test, ESMF_UtilUTest.F90, line 951
  PASS  Testing creating a directory which already exists, ESMF_UtilUTest.F90, line 626
  PASS  ESMF_UtilString2Double() - negative value - Test, ESMF_UtilUTest.F90, line 958
  PASS  ESMF_UtilString2Int() - special string missing - Test, ESMF_UtilUTest.F90, line 826
  PASS  ESMF_UtilString2Int() - special string - Test, ESMF_UtilUTest.F90, line 836
  PASS  ESMF_UtilString2Double() - explicit positive value - Test, ESMF_UtilUTest.F90, line 966
  PASS  ESMF_UtilString2Int() - special string - Test, ESMF_UtilUTest.F90, line 843
  PASS  ESMF_UtilString2Double() - explicit positive value - Test, ESMF_UtilUTest.F90, line 973
  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, line 981
  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, line 988
  PASS  ESMF_UtilString2Real() - no blanks - Test, ESMF_UtilUTest.F90, line 856
  PASS  Testing creating a directory, ESMF_UtilUTest.F90, line 618
  PASS  Testing creating a directory which already exists w/relaxedFlag, ESMF_UtilUTest.F90, line 634
  PASS  ESMF_UtilString2Double() - trailing blanks - Test, ESMF_UtilUTest.F90, line 996
  PASS  ESMF_UtilString2Real() - no blanks - Test, ESMF_UtilUTest.F90, line 863
  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, line 1003
  PASS  ESMF_UtilString2Real() - negative value - Test, ESMF_UtilUTest.F90, line 871
  PASS  ESMF_UtilString2Real() - negative value - Test, ESMF_UtilUTest.F90, line 878
  PASS  Testing concatenating strings, ESMF_UtilUTest.F90, line 1016
  PASS  ESMF_UtilString2Real() - explicit positive value - Test, ESMF_UtilUTest.F90, line 886
  PASS  Testing converting C string to Fortran string, ESMF_UtilUTest.F90, line 1031
  PASS  ESMF_UtilString2Real() - explicit positive value - Test, ESMF_UtilUTest.F90, line 893
  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line 901
  PASS  Testing converting Fortran string to C string, ESMF_UtilUTest.F90, line 1047
  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line 908
  PASS  Testing removing a directory, ESMF_UtilUTest.F90, line 642
  Ending Test, file ESMF_UtilUTest.F90, line 1053
  PASS  ESMF_UtilString2Real() - trailing blanks - Test, ESMF_UtilUTest.F90, line 916
  PASS  Testing creating a directory which already exists, ESMF_UtilUTest.F90, line 626
  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line 923
  PASS  Testing removing a directory which does not exist, ESMF_UtilUTest.F90, line 650
  PASS  Testing creating a directory which already exists w/relaxedFlag, ESMF_UtilUTest.F90, line 634
  PASS  ESMF_UtilString2Double() - no blanks - Test, ESMF_UtilUTest.F90, line 936
  PASS  Testing removing a directory which does not exist, relaxed, ESMF_UtilUTest.F90, line 658
  PASS  ESMF_UtilString2Double() - no blanks - Test, ESMF_UtilUTest.F90, line 943
  PASS  Testing getting the current directory, ESMF_UtilUTest.F90, line 672
  PASS  ESMF_UtilString2Double() - negative value - Test, ESMF_UtilUTest.F90, line 951
 current directory name =>/glade/scratch/dunlap/esmf-test-dev/gfortran_7.4.0_openmpi_O_newalarm/esmf/test/testO/Linux.gfortran.64.openmpi.default<
  PASS  ESMF_UtilString2Double() - negative value - Test, ESMF_UtilUTest.F90, line 958
  PASS  Testing directory name for valid characters, ESMF_UtilUTest.F90, line 691
  PASS  ESMF_UtilString2Double() - explicit positive value - Test, ESMF_UtilUTest.F90, line 966
  PASS  ESMF_UtilString2Double() - explicit positive value - Test, ESMF_UtilUTest.F90, line 973
  PASS  Testing getting the current directory with small string, ESMF_UtilUTest.F90, line 699
  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, line 981
  PASS  Testing removing a directory, ESMF_UtilUTest.F90, line 642
  PASS  Testing converting string to UPPER case, ESMF_UtilUTest.F90, line 711
  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, line 988
  PASS  Testing converting string to lower case, ESMF_UtilUTest.F90, line 721
  PASS  ESMF_UtilString2Double() - trailing blanks - Test, ESMF_UtilUTest.F90, line 996
  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, line 1003
  PASS  ESMF_UtilString2Int() - no blanks - Test, ESMF_UtilUTest.F90, line 733
  PASS  ESMF_UtilString2Int() - no blanks - Test, ESMF_UtilUTest.F90, line 740
  PASS  Testing removing a directory which does not exist, ESMF_UtilUTest.F90, line 650
  PASS  Testing concatenating strings, ESMF_UtilUTest.F90, line 1016
  PASS  Testing removing a directory which does not exist, relaxed, ESMF_UtilUTest.F90, line 658
  PASS  Testing converting C string to Fortran string, ESMF_UtilUTest.F90, line 1031
  PASS  Testing getting the current directory, ESMF_UtilUTest.F90, line 672
  PASS  ESMF_UtilStringInt2String() - Test, ESMF_UtilUTest.F90, line 749
  PASS  String -> Integer -> String conversion correctness - Test, ESMF_UtilUTest.F90, line 756
  PASS  Testing converting Fortran string to C string, ESMF_UtilUTest.F90, line 1047
  Ending Test, file ESMF_UtilUTest.F90, line 1053
 current directory name =>/glade/scratch/dunlap/esmf-test-dev/gfortran_7.4.0_openmpi_O_newalarm/esmf/test/testO/Linux.gfortran.64.openmpi.default<
  PASS  Testing directory name for valid characters, ESMF_UtilUTest.F90, line 691
  PASS  ESMF_UtilString2Int() - negative value - Test, ESMF_UtilUTest.F90, line 764
  PASS  ESMF_UtilString2Int() - negative value - Test, ESMF_UtilUTest.F90, line 771
  PASS  Testing getting the current directory with small string, ESMF_UtilUTest.F90, line 699
  PASS  ESMF_UtilString2Int() - explicit positive value - Test, ESMF_UtilUTest.F90, line 779
  PASS  Testing converting string to UPPER case, ESMF_UtilUTest.F90, line 711
  PASS  ESMF_UtilString2Int() - explicit positive value - Test, ESMF_UtilUTest.F90, line 786
  PASS  ESMF_UtilString2Int() - leading blanks - Test, ESMF_UtilUTest.F90, line 794
  PASS  Testing converting string to lower case, ESMF_UtilUTest.F90, line 721
  PASS  ESMF_UtilString2Int() - leading blanks - Test, ESMF_UtilUTest.F90, line 801
  PASS  ESMF_UtilString2Int() - no blanks - Test, ESMF_UtilUTest.F90, line 733
  PASS  ESMF_UtilString2Int() - trailing blanks - Test, ESMF_UtilUTest.F90, line 809
  PASS  ESMF_UtilString2Int() - no blanks - Test, ESMF_UtilUTest.F90, line 740
  PASS  ESMF_UtilString2Int() - trailing blanks - Test, ESMF_UtilUTest.F90, line 816
  PASS  ESMF_UtilStringInt2String() - Test, ESMF_UtilUTest.F90, line 749
  PASS  ESMF_UtilString2Int() - special string missing - Test, ESMF_UtilUTest.F90, line 826
  PASS  String -> Integer -> String conversion correctness - Test, ESMF_UtilUTest.F90, line 756
  PASS  ESMF_UtilString2Int() - special string - Test, ESMF_UtilUTest.F90, line 836
  PASS  ESMF_UtilString2Int() - negative value - Test, ESMF_UtilUTest.F90, line 764
  PASS  ESMF_UtilString2Int() - special string - Test, ESMF_UtilUTest.F90, line 843
  PASS  ESMF_UtilString2Int() - negative value - Test, ESMF_UtilUTest.F90, line 771
  PASS  ESMF_UtilString2Real() - no blanks - Test, ESMF_UtilUTest.F90, line 856
  PASS  ESMF_UtilString2Int() - explicit positive value - Test, ESMF_UtilUTest.F90, line 779
  PASS  ESMF_UtilString2Real() - no blanks - Test, ESMF_UtilUTest.F90, line 863
  PASS  ESMF_UtilString2Int() - explicit positive value - Test, ESMF_UtilUTest.F90, line 786
  PASS  ESMF_UtilString2Real() - negative value - Test, ESMF_UtilUTest.F90, line 871
  PASS  ESMF_UtilString2Int() - leading blanks - Test, ESMF_UtilUTest.F90, line 794
  PASS  ESMF_UtilString2Real() - negative value - Test, ESMF_UtilUTest.F90, line 878
  PASS  ESMF_UtilString2Int() - leading blanks - Test, ESMF_UtilUTest.F90, line 801
  PASS  ESMF_UtilString2Real() - explicit positive value - Test, ESMF_UtilUTest.F90, line 886
  PASS  ESMF_UtilString2Int() - trailing blanks - Test, ESMF_UtilUTest.F90, line 809
  PASS  ESMF_UtilString2Real() - explicit positive value - Test, ESMF_UtilUTest.F90, line 893
  PASS  ESMF_UtilString2Int() - trailing blanks - Test, ESMF_UtilUTest.F90, line 816
  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line 901
  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line 908
  PASS  ESMF_UtilString2Int() - special string missing - Test, ESMF_UtilUTest.F90, line 826
  PASS  ESMF_UtilString2Real() - trailing blanks - Test, ESMF_UtilUTest.F90, line 916
  PASS  ESMF_UtilString2Int() - special string - Test, ESMF_UtilUTest.F90, line 836
  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line 923
  PASS  ESMF_UtilString2Int() - special string - Test, ESMF_UtilUTest.F90, line 843
  PASS  ESMF_UtilString2Double() - no blanks - Test, ESMF_UtilUTest.F90, line 936
  PASS  ESMF_UtilString2Real() - no blanks - Test, ESMF_UtilUTest.F90, line 856
  PASS  ESMF_UtilString2Double() - no blanks - Test, ESMF_UtilUTest.F90, line 943
  PASS  ESMF_UtilString2Real() - no blanks - Test, ESMF_UtilUTest.F90, line 863
  PASS  ESMF_UtilString2Double() - negative value - Test, ESMF_UtilUTest.F90, line 951
  PASS  ESMF_UtilString2Real() - negative value - Test, ESMF_UtilUTest.F90, line 871
  PASS  ESMF_UtilString2Double() - negative value - Test, ESMF_UtilUTest.F90, line 958
  PASS  ESMF_UtilString2Real() - negative value - Test, ESMF_UtilUTest.F90, line 878
  PASS  ESMF_UtilString2Double() - explicit positive value - Test, ESMF_UtilUTest.F90, line 966
  PASS  ESMF_UtilString2Real() - explicit positive value - Test, ESMF_UtilUTest.F90, line 886
  PASS  ESMF_UtilString2Double() - explicit positive value - Test, ESMF_UtilUTest.F90, line 973
  PASS  ESMF_UtilString2Real() - explicit positive value - Test, ESMF_UtilUTest.F90, line 893
  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, line 981
  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line 901
  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, line 988
  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line 908
  PASS  ESMF_UtilString2Double() - trailing blanks - Test, ESMF_UtilUTest.F90, line 996
  PASS  ESMF_UtilString2Real() - trailing blanks - Test, ESMF_UtilUTest.F90, line 916
  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, line 1003
  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line 923
  PASS  Testing concatenating strings, ESMF_UtilUTest.F90, line 1016
  PASS  ESMF_UtilString2Double() - no blanks - Test, ESMF_UtilUTest.F90, line 936
  PASS  Testing converting C string to Fortran string, ESMF_UtilUTest.F90, line 1031
  PASS  ESMF_UtilString2Double() - no blanks - Test, ESMF_UtilUTest.F90, line 943
  PASS  Testing converting Fortran string to C string, ESMF_UtilUTest.F90, line 1047
  PASS  ESMF_UtilString2Double() - negative value - Test, ESMF_UtilUTest.F90, line 951
  Ending Test, file ESMF_UtilUTest.F90, line 1053
  PASS  ESMF_UtilString2Double() - negative value - Test, ESMF_UtilUTest.F90, line 958
  PASS  ESMF_UtilString2Double() - explicit positive value - Test, ESMF_UtilUTest.F90, line 966
  PASS  ESMF_UtilString2Double() - explicit positive value - Test, ESMF_UtilUTest.F90, line 973
  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, line 981
  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, line 988
  PASS  ESMF_UtilString2Double() - trailing blanks - Test, ESMF_UtilUTest.F90, line 996
  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, line 1003
  PASS  Testing concatenating strings, ESMF_UtilUTest.F90, line 1016
  PASS  Testing converting C string to Fortran string, ESMF_UtilUTest.F90, line 1031
  PASS  Testing converting Fortran string to C string, ESMF_UtilUTest.F90, line 1047
  Ending Test, file ESMF_UtilUTest.F90, line 1053
  PET           0  Test Elapsed Time    6.7219999999999915       msec.
  PET           2  Test Elapsed Time    6.6470000000000145       msec.
  PET           1  Test Elapsed Time    6.5559999999999787       msec.
  PET           3  Test Elapsed Time    6.6590000000000122       msec.
